From 430b109310c5c1e245a4d1b4cbdb378aae10c343 Mon Sep 17 00:00:00 2001
From: Peter Jones <pjones@redhat.com>
Date: Tue, 3 May 2022 17:05:20 -0400
Subject: [PATCH 2/2] Also avoid CVE-2022-28737 in verify_image()

PR 446 ("Add verify_image") duplicates some of the code affected by
Chris Coulson's defense in depth patch against CVE-2022-28737 ("pe:
Perform image verification earlier when loading grub").

This patch makes the same change to the new function.

Signed-off-by: Peter Jones <pjones@redhat.com>

Upstream-Status: Backport
CVE: CVE-2022-28737

Reference to upstream patch:
https://github.com/rhboot/shim/commit/159151b6649008793d6204a34d7b9c41221fb4b0

[OP: - applied changes in shim.c
     - adjusted verify_buffer() context parameter
     - adjusted console_print() -> console_notify(), dropped console_print()
       verbose call]

Signed-off-by: Archana Polampalli <archana.polampalli@windriver.com>
---
 shim.c | 36 +++++++++++++++++++++---------------
 1 file changed, 21 insertions(+), 15 deletions(-)

diff --git a/shim.c b/shim.c
index 269b2ab..3f2935d 100644
--- a/shim.c
+++ b/shim.c
@@ -1224,8 +1224,27 @@ static EFI_STATUS handle_image (void *data, unsigned int datasize,
	}

	/*
-	 * We only need to verify the binary if we're in secure mode
-	 */
+         * Perform the image verification before we start copying data around
+         * in order to load it.
+         */
+       if (secure_mode()) {
+               efi_status = verify_buffer(data, datasize,
+                                          &context, sha256hash, sha1hash);
+               if (EFI_ERROR(efi_status)) {
+                       console_error(L"Verification failed", efi_status);
+                       return efi_status;
+               } else if (verbose)
+                       console_notify(L"Verification succeeded\n");
+      }
+
+       /*
+        * Calculate the hash for the TPM measurement.
+        * XXX: We're computing these twice in secure boot mode when the
+        *  buffers already contain the previously computed hashes. Also,
+        *  this is only useful for the TPM1.2 case. We should try to fix
+        *  this in a follow-up.
+
+        */
	efi_status = generate_hash(data, datasize, &context, sha256hash,
				   sha1hash);
	if (efi_status != EFI_SUCCESS)
@@ -1234,19 +1253,6 @@ static EFI_STATUS handle_image (void *data, unsigned int datasize,
	/* Measure the binary into the TPM */
	tpm_log_pe((EFI_PHYSICAL_ADDRESS)(UINTN)data, datasize, sha1hash, 4);

-	if (secure_mode ()) {
-		efi_status = verify_buffer(data, datasize, &context,
-					   sha256hash, sha1hash);
-
-		if (EFI_ERROR(efi_status)) {
-			console_error(L"Verification failed", efi_status);
-			return efi_status;
-		} else {
-			if (verbose)
-				console_notify(L"Verification succeeded");
-		}
-	}
-
	/* The spec says, uselessly, of SectionAlignment:
	 * =====
	 * The alignment (in bytes) of sections when they are loaded into
--
2.34.1
